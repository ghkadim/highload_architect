/*
 * OTUS Highload Architect
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// DefaultApiController binds http requests to an api service and writes the service results to the http response
type DefaultApiController struct {
	service DefaultApiServicer
	errorHandler ErrorHandler
}

// DefaultApiOption for how the controller is set up.
type DefaultApiOption func(*DefaultApiController)

// WithDefaultApiErrorHandler inject ErrorHandler into controller
func WithDefaultApiErrorHandler(h ErrorHandler) DefaultApiOption {
	return func(c *DefaultApiController) {
		c.errorHandler = h
	}
}

// NewDefaultApiController creates a default api controller
func NewDefaultApiController(s DefaultApiServicer, opts ...DefaultApiOption) Router {
	controller := &DefaultApiController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the DefaultApiController
func (c *DefaultApiController) Routes() Routes {
	return Routes{ 
		{
			"DialogUserIdListGet",
			strings.ToUpper("Get"),
			"/dialog/{user_id}/list",
			c.DialogUserIdListGet,
		},
		{
			"DialogUserIdSendPost",
			strings.ToUpper("Post"),
			"/dialog/{user_id}/send",
			c.DialogUserIdSendPost,
		},
	}
}

// DialogUserIdListGet - 
func (c *DefaultApiController) DialogUserIdListGet(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	userIdParam := params["user_id"]
	result, err := c.service.DialogUserIdListGet(r.Context(), userIdParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}

// DialogUserIdSendPost - 
func (c *DefaultApiController) DialogUserIdSendPost(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	userIdParam := params["user_id"]
	dialogUserIdSendPostRequestParam := DialogUserIdSendPostRequest{}
	d := json.NewDecoder(r.Body)
	d.DisallowUnknownFields()
	if err := d.Decode(&dialogUserIdSendPostRequestParam); err != nil {
		c.errorHandler(w, r, &ParsingError{Err: err}, nil)
		return
	}
	if err := AssertDialogUserIdSendPostRequestRequired(dialogUserIdSendPostRequestParam); err != nil {
		c.errorHandler(w, r, err, nil)
		return
	}
	result, err := c.service.DialogUserIdSendPost(r.Context(), userIdParam, dialogUserIdSendPostRequestParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
